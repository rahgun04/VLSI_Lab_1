# Cadence Genus(TM) Synthesis Solution, Version 18.10-p003_1, built Jun  7 2018 23:53:27

# Date: Thu Oct 02 14:44:13 2025
# Host: ee-mill1 (x86_64 w/Linux 3.10.0-1160.81.1.0.1.el7.x86_64) (12cores*48cpus*2physical cpus*Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz 30720KB)
# OS:   Red Hat Enterprise Linux Server release 7.9 (Maipo)

set _HDL_DIRECTORY ./SRC
ls
set _HDL_DIRECTORY ./src
set HDL_FILES [list lfsr4.sv]
set DESIGN lfsr4
set CLOCK_NAME clk
set CLOCK_PERIOD_ps 1000
set GEN_EFF medium
set MAP_OPT_EFF high
set _OUTPUTS_PATH OUTPUTS
set _REPORTS_PATH REPORTS
set _REPORTS_PATH reports
set _OUTPUTS_PATH output
set _HDL_DIRECTORY ./SRC
set HDL_FILES [list lfsr4.sv]           ;* list of sources
set DESIGN lfsr4                        ;* top-level module name
set CLOCK_NAME clk
set CLOCK_PERIOD_ps 1000
set GEN_EFF medium                      ;# synthesis effort
set MAP_OPT_EFF high                    ;# mapping and optimization effort
set _OUTPUTS_PATH OUTPUTS               ;# where to store output files
set _REPORTS_PATH REPORTS               ;# where to store synthesis reports
set_db init_hdl_search_path $_HDL_DIRECTORY;
set_db library "/usr/local/cadence/kits/tsmc/beLibs/65nm/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lpbwp7t_220a/tcbn65lpbwp7twc.lib";
set_db lef_library "/usr/local/cadence/kits/tsmc/beLibs/65nm/TSMCHOME/digital/Back_End/lef/tcbn65lpbwp7t_141a/lef/tcbn65lpbwp7t_9lmT2.lef";
set_db cap_table_file "/usr/local/cadence/kits/tsmc/beLibs/65nm/TSMCHOME/digital/Back_End/lef/tcbn65lpbwp7t_141a/techfiles/captable/cln65lp_1p09m+alrdl_top2_rcworst.captable";
set_db information_level 4            ;# Output verbosity level - 1 (default) to 11
set_db use_tiehilo_for_const duplicate;
read_hdl -sv ${HDL_FILES}
elaborate ${DESIGN}
check_design -unresolved
check_design -unloaded
set_time_unit -picoseconds
set_load_unit -femtofarads
create_clock -domain domain1 -name ${CLOCK_NAME} -period ${CLOCK_PERIOD_ps} [get_db ports ${CLOCK_NAME}]
set_db clock:${DESIGN}/${CLOCK_NAME} .setup_uncertainty [expr 0.02 * ${CLOCK_PERIOD_ps}]
set_clock_uncertainty -hold  [expr 0.02 * ${CLOCK_PERIOD_ps}] ${CLOCK_NAME}
set_clock_uncertainty -setup [expr 0.02 * ${CLOCK_PERIOD_ps}] ${CLOCK_NAME}
set_clock_transition -rise  50 ${CLOCK_NAME}
set_clock_transition -fall  50 ${CLOCK_NAME}
set_db syn_generic_effort $GEN_EFF
syn_generic
set_db syn_map_effort $MAP_OPT_EFF
syn_map
write_snapshot -directory ${_REPORTS_PATH}/map -tag map
report_dp > ${_REPORTS_PATH}/map/${DESIGN}_datapath.rpt
report_summary -directory ${_REPORTS_PATH}
set_db syn_opt_effort $MAP_OPT_EFF
syn_opt
write_snapshot -directory ${_REPORTS_PATH}/opt -tag syn_opt
report_dp > ${_REPORTS_PATH}/opt/${DESIGN}_datapath.rpt
report_summary -directory ${_REPORTS_PATH}
write_snapshot -directory ${_REPORTS_PATH}/final -tag final
report_summary -directory ${_REPORTS_PATH}
write_hdl > ${_OUTPUTS_PATH}/${DESIGN}_synth.v
write_sdc > ${_OUTPUTS_PATH}/${DESIGN}_synth.sdc
write_sdf > ${_OUTPUTS_PATH}/${DESIGN}_synth.sdf
write_script > ${_OUTPUTS_PATH}/${DESIGN}.script
write_design -base_name ${_OUTPUTS_PATH}/DESIGN/${DESIGN}_synth
write_db -all_root_attributes -script ${_OUTPUTS_PATH}/DESIGN/${DESIGN}_synth.tcl
report_qor > ${_REPORTS_PATH}/${DESIGN}_qor.rpt
report_area > ${_REPORTS_PATH}/${DESIGN}_area.rpt
report_dp > ${_REPORTS_PATH}/${DESIGN}_datapath_incr.rpt
report_messages > ${_REPORTS_PATH}/${DESIGN}_messages.rpt
report_gates > ${_REPORTS_PATH}/${DESIGN}_gates.rpt
report_timing > ${_REPORTS_PATH}/${DESIGN}_timing.rpt
report_power > ${_REPORTS_PATH}/${DESIGN}_power.rpt
nautilus
