# Cadence Genus(TM) Synthesis Solution, Version 18.10-p003_1, built Jun  7 2018 23:53:27

# Date: Thu Oct 02 15:06:23 2025
# Host: ee-mill1 (x86_64 w/Linux 3.10.0-1160.81.1.0.1.el7.x86_64) (12cores*48cpus*2physical cpus*Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz 30720KB)
# OS:   Red Hat Enterprise Linux Server release 7.9 (Maipo)

source SRC/synth.tcl
vim SRC/synth.tcl
set _HDL_DIRECTORY ./SRC
set HDL_FILES [list lfsr4.sv]           ;# list of sources
set DESIGN lfsr4                        ;# top-level module name
set CLOCK_NAME clk
set CLOCK_PERIOD_ps 1000
set GEN_EFF medium                      ;# synthesis effort
set MAP_OPT_EFF high                    ;# mapping and optimization effort
set _OUTPUTS_PATH OUTPUTS               ;# where to store output files
set _REPORTS_PATH REPORTS               ;# where to store synthesis reports
set_db init_hdl_search_path $_HDL_DIRECTORY;
set_db library "/usr/local/cadence/kits/tsmc/beLibs/65nm/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lpbwp7t_220a/tcbn65lpbwp7twc.lib";
set_db lef_library "/usr/local/cadence/kits/tsmc/beLibs/65nm/TSMCHOME/digital/Back_End/lef/tcbn65lpbwp7t_141a/lef/tcbn65lpbwp7t_9lmT2.lef";
set_db cap_table_file "/usr/local/cadence/kits/tsmc/beLibs/65nm/TSMCHOME/digital/Back_End/lef/tcbn65lpbwp7t_141a/techfiles/captable/cln65lp_1p09m+alrdl_top2_rcworst.captable";
set_db information_level 4            ;# Output verbosity level - 1 (default) to 11
set_db use_tiehilo_for_const duplicate;
read_hdl -sv ${HDL_FILES}
elaborate ${DESIGN}
check_design -unresolved
check_design -unloaded
set_time_unit -picoseconds
set_load_unit -femtofarads
create_clock -domain domain1 -name ${CLOCK_NAME} -period ${CLOCK_PERIOD_ps} [get_db ports ${CLOCK_NAME}]
set_db clock:${DESIGN}/${CLOCK_NAME} .setup_uncertainty [expr 0.02 * ${CLOCK_PERIOD_ps}]
set_clock_uncertainty -hold  [expr 0.02 * ${CLOCK_PERIOD_ps}] ${CLOCK_NAME}
set_clock_uncertainty -setup [expr 0.02 * ${CLOCK_PERIOD_ps}] ${CLOCK_NAME}
set_clock_transition -rise  50 ${CLOCK_NAME}
set_clock_transition -fall  50 ${CLOCK_NAME}
set_db syn_generic_effort $GEN_EFF
syn_generic
write_snapshot -directory ${_REPORTS_PATH}/map -tag map
report_dp > ${_REPORTS_PATH}/map/${DESIGN}_datapath.rpt
report_summary -directory ${_REPORTS_PATH}
ls
ls REPORTS/
ls \OUTPUTS
source SRC/synth.tcl
source SRC/synth.tcl
source SRC/synth.tcl
set _HDL_DIRECTORY ./SRC
set HDL_FILES [list lfsr4.sv]           ;# list of sources
set DESIGN lfsr4                        ;# top-level module name
set CLOCK_NAME clk
set CLOCK_PERIOD_ps 1000
set GEN_EFF medium                      ;# synthesis effort
set MAP_OPT_EFF high                    ;# mapping and optimization effort
set _OUTPUTS_PATH OUTPUTS               ;# where to store output files
set _REPORTS_PATH REPORTS               ;# where to store synthesis reports
read_hdl -sv ${HDL_FILES}
elaborate ${DESIGN}
check_design -unresolved
check_design -unloaded
set_time_unit -picoseconds
set_load_unit -femtofarads
create_clock -domain domain1 -name ${CLOCK_NAME} -period ${CLOCK_PERIOD_ps} [get_db ports ${CLOCK_NAME}]
set_db clock:${DESIGN}/${CLOCK_NAME} .setup_uncertainty [expr 0.02 * ${CLOCK_PERIOD_ps}]
set_clock_uncertainty -hold  [expr 0.02 * ${CLOCK_PERIOD_ps}] ${CLOCK_NAME}
set_clock_uncertainty -setup [expr 0.02 * ${CLOCK_PERIOD_ps}] ${CLOCK_NAME}
set_clock_transition -rise  50 ${CLOCK_NAME}
set_clock_transition -fall  50 ${CLOCK_NAME}
